{"version":3,"file":"static/js/634.a476710f.chunk.js","mappings":"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","sources":["API/Api.js","components/MoviesComp/MoviesList.jsx","components/MoviesComp/MoviesStyled.styled.jsx","components/MoviesComp/MoviesForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst keyApi = '6d070ee2b82df1d970d23eca62ef69da';\n\n// ===================================================================================\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZDA3MGVlMmI4MmRmMWQ5NzBkMjNlY2E2MmVmNjlkYSIsInN1YiI6IjY0OTExN2NmNDJiZjAxMDExZTc1MTQzYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.S6VKiZqFJ17KU30nJMe8ewgWIwV0rkd-iqWQtxFXFF0',\n//   },\n// };\n//======================================================================================\nexport class NewApi {\n  async getAll(page = 1) {\n    try {\n      const response = await axios.get(\n        `/trending/all/day?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n\n      // ==============================================================================\n      // const response = await axios.request(options);\n      // return response;\n      // ============================================================================\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getFilmId(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getCast(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/credits?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getReviews(id, page = 1) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/reviews?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getMovies(name) {\n    try {\n      const response = await axios.get(\n        `/search/movie?query=${name}&include_adult=false&language=en-US/&api_key=${keyApi}&page=1`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import { Link } from 'react-router-dom';\n\nimport { ListStyled } from 'components/styled/CommonStyles';\n\nexport const MoviesList = ({ films, location }) => {\n  return (\n    <ListStyled>\n      {films.map(film => {\n        return (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.original_title ? film.original_title : film.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ListStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  margin-bottom: 24px;\n  button {\n    font-size: 20px;\n    padding: 4px;\n    margin-left: 12px;\n    border-radius: 4px;\n    background-color: aquamarine;\n    :hover,\n    : focus {\n      background-color: mediumspringgreen;\n      cursor: pointer;\n    }\n    :active {\n      background-color: green;\n    }\n  }\n  input {\n    font-size: 20px;\n    padding: 4px;\n    margin-left: 16px;\n    border-radius: 4px;\n  }\n`;\n","import { FormStyled } from 'components/MoviesComp/MoviesStyled.styled';\n\nexport const MoviesForm = ({ formSubmit, inputChange, searchParams }) => {\n  return (\n    <FormStyled onSubmit={formSubmit}>\n      <button>Find</button>\n      <input\n        type=\"text\"\n        onChange={inputChange}\n        value={searchParams ? searchParams : ''}\n      />\n    </FormStyled>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { MoviesList } from 'components/MoviesComp/MoviesList';\nimport { MoviesForm } from 'components/MoviesComp/MoviesForm';\n\nimport { ContainerStyled } from 'components/styled/CommonStyles';\n\nimport { NewApi } from 'API/Api';\nconst api = new NewApi();\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [filmsName, setFilmsName] = useState('');\n  const [status, setStatus] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  if (searchParams.get('filmName') && filmsName === '' && status) {\n    setFilmsName(searchParams.get('filmName'));\n  }\n\n  useEffect(() => {\n    const apiGet = async () => {\n      try {\n        const data = await api.getMovies(filmsName);\n        if (!data) {\n          alert('sorry no information yet');\n          return;\n        }\n        setFilms([...data.results]);\n      } catch (error) {\n        console.error(error.messeng);\n      } finally {\n        return;\n      }\n    };\n    apiGet();\n  }, [filmsName]);\n\n  const inputChange = e => {\n    setStatus(false);\n    const paramInput =\n      e.target.value !== '' ? { filmName: e.target.value } : {};\n    setSearchParams(paramInput);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    setFilmsName(searchParams.get('filmName'));\n  };\n\n  return (\n    <ContainerStyled>\n      <MoviesForm\n        formSubmit={formSubmit}\n        inputChange={inputChange}\n        searchParams={searchParams.get('filmName')}\n      />\n\n      {films.length !== 0 && <MoviesList location={location} films={films} />}\n    </ContainerStyled>\n  );\n};\nexport default Movies;\n"],"names":["axios","keyApi","NewApi","page","response","data","console","error","id","name","MoviesList","films","location","map","film","to","state","from","original_title","title","FormStyled","styled","MoviesForm","formSubmit","inputChange","searchParams","onSubmit","type","onChange","value","api","useState","setFilms","filmsName","setFilmsName","status","setStatus","useSearchParams","setSearchParams","useLocation","get","useEffect","apiGet","getMovies","alert","results","messeng","e","preventDefault","paramInput","target","filmName","length"],"sourceRoot":""}