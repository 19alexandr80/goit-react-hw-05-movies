{"version":3,"file":"static/js/134.dac61076.chunk.js","mappings":"gOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAaFC,EAAb,gHACE,yGAAaC,EAAb,+BAAoB,EAApB,kBAE2BH,EAAAA,EAAAA,IAAA,oDACwBC,EADxB,iBACuCE,IAHlE,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAYIC,QAAQC,MAAR,MAZJ,yDADF,gHAiBE,WAAgBC,GAAhB,gGAE2BR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oCACmBP,IAH9C,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAjBF,+GA4BE,WAAcC,GAAd,gGAE2BR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4CAC2BP,IAHtD,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDA5BF,kHAsCE,WAAiBC,GAAjB,4FAAqBL,EAArB,+BAA4B,EAA5B,kBAE2BH,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4CAC2BP,EAD3B,iBAC0CE,IAHrE,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAtCF,iHAgDE,WAAgBE,GAAhB,gGAE2BT,EAAAA,EAAAA,IAAA,8BACES,EADF,wDACsDR,EADtD,YAF3B,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAhDF,6D,0HCXMG,EAAM,IAAIR,EAAAA,EAmEhB,UAjEe,WACb,OAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACbH,EAAaI,IAAI,aAA6B,KAAdP,GAClCC,EAAaE,EAAaI,IAAI,aAEhCf,QAAQgB,IAAI,mCACZC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,6GAEQd,EAAIe,UAAUX,GAFtB,UAELT,EAFK,8BAITqB,MAAM,4BAJG,0BAOXb,GAAS,OAAIR,EAAKsB,UAPP,kDASXrB,QAAQC,MAAM,KAAMqB,SATT,4GAAH,qDAeZJ,GACD,GAAE,CAACV,IAaJ,OACE,iCACE,kBAAMe,SAPS,SAAAC,GACjBA,EAAEC,iBACFhB,EAAaE,EAAaI,IAAI,YAC/B,EAIG,WACE,sCACA,kBACEW,KAAK,OACLC,SAjBY,SAAAH,GAClB,IAAMI,EACe,KAAnBJ,EAAEK,OAAOC,MAAe,CAAEC,SAAUP,EAAEK,OAAOC,OAAU,CAAC,EAC1DlB,EAAgBgB,EACjB,EAcOE,MACEnB,EAAaI,IAAI,YAAcJ,EAAaI,IAAI,YAAc,SAIpE,wBACGT,EAAM0B,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAK/B,IAAMiC,MAAO,CAAEC,KAAMvB,GAA/C,SACGoB,EAAKI,eAAiBJ,EAAKI,eAAiBJ,EAAKK,SAF7CL,EAAK/B,GAMjB,QAIR,C","sources":["API/Api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst keyApi = '6d070ee2b82df1d970d23eca62ef69da';\n\n// ===================================================================================\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZDA3MGVlMmI4MmRmMWQ5NzBkMjNlY2E2MmVmNjlkYSIsInN1YiI6IjY0OTExN2NmNDJiZjAxMDExZTc1MTQzYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.S6VKiZqFJ17KU30nJMe8ewgWIwV0rkd-iqWQtxFXFF0',\n//   },\n// };\n//======================================================================================\nexport class NewApi {\n  async getAll(page = 1) {\n    try {\n      const response = await axios.get(\n        `/trending/all/day?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n\n      // ==============================================================================\n      // const response = await axios.request(options);\n      // return response;\n      // ============================================================================\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getFilmId(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getCast(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/credits?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getReviews(id, page = 1) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/reviews?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getMovies(name) {\n    try {\n      const response = await axios.get(\n        `/search/movie?query=${name}&include_adult=false&language=en-US/&api_key=${keyApi}&page=1`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { NewApi } from 'API/Api';\nconst api = new NewApi();\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [filmsName, setFilmsName] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  if (searchParams.get('filmName') && filmsName === '') {\n    setFilmsName(searchParams.get('filmName'));\n  }\n  console.log('kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk');\n  useEffect(() => {\n    const apiGet = async () => {\n      try {\n        const data = await api.getMovies(filmsName);\n        if (!data) {\n          alert('sorry no information yet');\n          return;\n        }\n        setFilms([...data.results]);\n      } catch (error) {\n        console.error(error.messeng);\n      } finally {\n        // setStatus(false);\n        return;\n      }\n    };\n    apiGet();\n  }, [filmsName]);\n\n  const inputChange = e => {\n    const paramInput =\n      e.target.value !== '' ? { filmName: e.target.value } : {};\n    setSearchParams(paramInput);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    setFilmsName(searchParams.get('filmName'));\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit}>\n        <button>Find</button>\n        <input\n          type=\"text\"\n          onChange={inputChange}\n          value={\n            searchParams.get('filmName') ? searchParams.get('filmName') : ''\n          }\n        />\n      </form>\n      <ul>\n        {films.map(film => {\n          return (\n            <li key={film.id}>\n              <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                {film.original_title ? film.original_title : film.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","keyApi","NewApi","page","response","data","console","error","id","name","api","useState","films","setFilms","filmsName","setFilmsName","useSearchParams","searchParams","setSearchParams","location","useLocation","get","log","useEffect","apiGet","getMovies","alert","results","messeng","onSubmit","e","preventDefault","type","onChange","paramInput","target","value","filmName","map","film","to","state","from","original_title","title"],"sourceRoot":""}