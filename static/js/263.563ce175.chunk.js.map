{"version":3,"file":"static/js/263.563ce175.chunk.js","mappings":"gOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAaFC,EAAb,gHACE,yGAAaC,EAAb,+BAAoB,EAApB,kBAE2BH,EAAAA,EAAAA,IAAA,oDACwBC,EADxB,iBACuCE,IAHlE,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAYIC,QAAQC,MAAR,MAZJ,yDADF,gHAiBE,WAAgBC,GAAhB,gGAE2BR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oCACmBP,IAH9C,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAjBF,+GA4BE,WAAcC,GAAd,gGAE2BR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4CAC2BP,IAHtD,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDA5BF,kHAsCE,WAAiBC,GAAjB,4FAAqBL,EAArB,+BAA4B,EAA5B,kBAE2BH,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4CAC2BP,EAD3B,iBAC0CE,IAHrE,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAtCF,iHAgDE,WAAgBE,GAAhB,gGAE2BT,EAAAA,EAAAA,IAAA,8BACES,EADF,wDACsDR,EADtD,YAF3B,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAhDF,6D,oKCNaG,GARaC,EAAAA,EAAAA,GAAH,4KAQGA,EAAAA,EAAAA,GAAH,0C,kBCJVC,EAAW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/B,OACE,SAAC,IAAD,WACE,SAAC,IAAD,UACGD,EAAKE,KAAI,SAAAC,GACR,OACE,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAKR,IAAMU,MAAO,CAAEC,KAAML,GAA/C,SACGE,EAAKI,cAAgBJ,EAAKI,cAAgBJ,EAAKK,kBAFnCL,EAAKR,GAMzB,OAIR,ECfKc,EAAM,I,OAAIpB,GA0BhB,EAxBiB,WACf,OAAwBqB,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KACMV,GAAWW,EAAAA,EAAAA,MAoBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,6GAGQL,EAAIM,SAHZ,OAGLvB,EAHK,OAKXmB,GAAQ,OAAInB,EAAKwB,UALN,gDAOXvB,QAAQC,MAAM,KAAMuB,SAPT,2GAAH,qDAaZH,GACD,GAAE,KAEI,SAACf,EAAD,CAAUC,KAAMA,EAAMC,SAAUA,GACxC,C","sources":["API/Api.js","components/HomeList/HomeListStyled.styled.jsx","components/HomeList/HomeList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst keyApi = '6d070ee2b82df1d970d23eca62ef69da';\n\n// ===================================================================================\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZDA3MGVlMmI4MmRmMWQ5NzBkMjNlY2E2MmVmNjlkYSIsInN1YiI6IjY0OTExN2NmNDJiZjAxMDExZTc1MTQzYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.S6VKiZqFJ17KU30nJMe8ewgWIwV0rkd-iqWQtxFXFF0',\n//   },\n// };\n//======================================================================================\nexport class NewApi {\n  async getAll(page = 1) {\n    try {\n      const response = await axios.get(\n        `/trending/all/day?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n\n      // ==============================================================================\n      // const response = await axios.request(options);\n      // return response;\n      // ============================================================================\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getFilmId(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getCast(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/credits?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getReviews(id, page = 1) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/reviews?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getMovies(name) {\n    try {\n      const response = await axios.get(\n        `/search/movie?query=${name}&include_adult=false&language=en-US/&api_key=${keyApi}&page=1`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const ListStyled = styled.ul`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  list-style-type: disclosure-closed;\n  outline-style: double;\n`;\nexport const FilmStyled = styled.li`\n  padding: 8px;\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { FilmStyled } from 'components/HomeList/HomeListStyled.styled';\nimport { ContainerStyled, ListStyled } from 'components/styled/CommonStyles';\n\nexport const HomeList = ({ list, location }) => {\n  return (\n    <ContainerStyled>\n      <ListStyled>\n        {list.map(film => {\n          return (\n            <FilmStyled key={film.id}>\n              <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                {film.original_name ? film.original_name : film.original_title}\n              </Link>\n            </FilmStyled>\n          );\n        })}\n      </ListStyled>\n    </ContainerStyled>\n  );\n};\nHomeList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_name: PropTypes.string,\n      original_title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { HomeList } from 'components/HomeList/HomeList';\n\nimport { NewApi } from 'API/Api';\n\nconst api = new NewApi();\n\nconst HomePage = () => {\n  const [list, setList] = useState([]);\n  const location = useLocation();\n  // const [status, setStatus] = useState(false);\n\n  useEffect(() => {\n    const getApi = async () => {\n      // setStatus(true);\n      try {\n        const data = await api.getAll();\n\n        setList([...data.results]);\n      } catch (error) {\n        console.error(error.messeng);\n      } finally {\n        // setStatus(false);\n        return;\n      }\n    };\n    getApi();\n  }, []);\n\n  return <HomeList list={list} location={location} />;\n};\nexport default HomePage;\n"],"names":["axios","keyApi","NewApi","page","response","data","console","error","id","name","FilmStyled","styled","HomeList","list","location","map","film","to","state","from","original_name","original_title","api","useState","setList","useLocation","useEffect","getApi","getAll","results","messeng"],"sourceRoot":""}