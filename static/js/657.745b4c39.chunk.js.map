{"version":3,"file":"static/js/657.745b4c39.chunk.js","mappings":"gOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAaFC,EAAb,gHACE,yGAAaC,EAAb,+BAAoB,EAApB,kBAE2BH,EAAAA,EAAAA,IAAA,oDACwBC,EADxB,iBACuCE,IAHlE,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAYIC,QAAQC,MAAR,MAZJ,yDADF,gHAiBE,WAAgBC,GAAhB,gGAE2BR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oCACmBP,IAH9C,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAjBF,+GA4BE,WAAcC,GAAd,gGAE2BR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4CAC2BP,IAHtD,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDA5BF,kHAsCE,WAAiBC,GAAjB,4FAAqBL,EAArB,+BAA4B,EAA5B,kBAE2BH,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4CAC2BP,EAD3B,iBAC0CE,IAHrE,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAtCF,iHAgDE,WAAgBE,GAAhB,gGAE2BT,EAAAA,EAAAA,IAAA,8BACES,EADF,wDACsDR,EADtD,YAF3B,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,yDAhDF,6D,6MCXMG,EAAM,IAAIR,EAAAA,EAoDhB,EAlDkB,WAAO,IAAD,IACtB,GAAwBS,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAoBhD,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,6GAGQb,EAAIc,UAAUV,EAAOW,SAH7B,UAGLpB,EAHK,8BAKTqB,MAAM,4BALG,0BAQXb,EAAQR,GARG,kDAUXC,QAAQC,MAAM,KAAMoB,SAVT,4GAAH,qDAgBZJ,GACD,GAAE,CAACT,EAAOW,WAET,iCACE,SAAC,KAAD,CAAMG,GAAIV,EAASW,QAAnB,qBACA,wBAAKjB,EAAKkB,cAAgBlB,EAAKkB,cAAgBlB,EAAKmB,kBACpD,gBACEC,IACEpB,EAAKqB,cAAL,yCACsCrB,EAAKqB,eACvCC,EAENC,IAAI,GACJC,MAAM,SAGR,2BACE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C","sources":["API/Api.js","pages/FilmParams.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst keyApi = '6d070ee2b82df1d970d23eca62ef69da';\n\n// ===================================================================================\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZDA3MGVlMmI4MmRmMWQ5NzBkMjNlY2E2MmVmNjlkYSIsInN1YiI6IjY0OTExN2NmNDJiZjAxMDExZTc1MTQzYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.S6VKiZqFJ17KU30nJMe8ewgWIwV0rkd-iqWQtxFXFF0',\n//   },\n// };\n//======================================================================================\nexport class NewApi {\n  async getAll(page = 1) {\n    try {\n      const response = await axios.get(\n        `/trending/all/day?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n\n      // ==============================================================================\n      // const response = await axios.request(options);\n      // return response;\n      // ============================================================================\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getFilmId(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getCast(id) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/credits?language=en-US/&api_key=${keyApi}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getReviews(id, page = 1) {\n    try {\n      const response = await axios.get(\n        `/movie/${id}/reviews?language=en-US/&api_key=${keyApi}&page=${page}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getMovies(name) {\n    try {\n      const response = await axios.get(\n        `/search/movie?query=${name}&include_adult=false&language=en-US/&api_key=${keyApi}&page=1`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import { useEffect, useState, useRef } from 'react';\nimport { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport def from 'image/default.png';\n\nimport { NewApi } from 'API/Api';\nconst api = new NewApi();\n\nconst FilmePage = () => {\n  const [film, setFilm] = useState({});\n  const params = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    const getApi = async () => {\n      // setStatus(true);\n      try {\n        const data = await api.getFilmId(params.movieId);\n        if (!data) {\n          alert('sorry no information yet');\n          return;\n        }\n        setFilm(data);\n      } catch (error) {\n        console.error(error.messeng);\n      } finally {\n        // setStatus(false);\n        return;\n      }\n    };\n    getApi();\n  }, [params.movieId]);\n  return (\n    <>\n      <Link to={backLink.current}>Button</Link>\n      <h2>{film.original_name ? film.original_name : film.original_title}</h2>\n      <img\n        src={\n          film.backdrop_path\n            ? `https://image.tmdb.org/t/p/w500${film.backdrop_path}`\n            : def\n        }\n        alt=\"\"\n        width=\"370\"\n      />\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default FilmePage;\n"],"names":["axios","keyApi","NewApi","page","response","data","console","error","id","name","api","useState","film","setFilm","params","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getApi","getFilmId","movieId","alert","messeng","to","current","original_name","original_title","src","backdrop_path","def","alt","width"],"sourceRoot":""}